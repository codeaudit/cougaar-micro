#####################################################
# These properties define the starting projection of the map.  
# These properties are listed in com.bbn.openmap.Environment.java,
# and affect the initialization of the application.
#####################################################

# Latitude and longitude in decimal degrees
#openmap.Latitude=41.5f
#openmap.Longitude=-71f
# Scale: zoom level (1:scale)
#openmap.Scale=10000000f

# Eritrea
#openmap.Latitude=15.3f
#openmap.Longitude=40.3f
#openmap.Scale=4000000f

# Extreme close-up in Eritrea
#openmap.Latitude=15.7761f
#openmap.Longitude=38.4550645f
#openmap.Scale=15625f


# Extreme close-up in Afghanistan
openmap.Latitude=33.339f
openmap.Longitude=69.916f
openmap.Scale=16000000f


# Projection type to start the map with.  Try "cadrg", "orthographic",
# which are projection IDs.  Check a particular projection class for
# it's ID string.
openmap.Projection=cadrg

# Width and Height of map, in pixels
#openmap.Width=640
#openmap.Height=480

# Change this for a different title in the main window.
#openmap.Title=OpenMap(tm)

# pixel X/Y window position (if values < 0, then center window on screen)
#openmap.x=-1
#openmap.y=-1

# The background color of the map, in hex AARRGGBB values (AA is
# transparancy, RR, GG and BB are red, green and blue in hex values
# between 00-FF (0-255)).
openmap.BackgroundColor=FF89C5F9

# Here is a property that lets you add debug statements to the
# application, to get more informative printouts detailing what is
# going on in the application.  Each source file may Debug statements
# throughout it (Debug.debugging("keyword") or
# Debug.message("keyword", "statement")), and you can turn those
# statements on by adding those keywords to this list.  Follows the
# marker name paradigm, with space-separated names.

#openmap.Debug=basic


# ###################################################
# These are miscellaneous variables for the OpenMap application.
# ###################################################

# How to lauch a browser to display additional information.
openmap.WebBrowser="C:\\Program Files\\Internet Explorer\\iexplore.exe"

# Used for creating web pages for the browser
#openmap.TempDirectory=/temp

# Help web pages
openmap.HelpURL=http://openmap.bbn.com/doc/user-guide.html

# Use internal frames as an application
gui.UseInternalFrames=false


# You may be trying to run OpenMap as an applet, with the data files
# in their own jar file.  It's difficult to get the applet to look in
# a data jar file if there are no classes in it (I couldn't find a
# solution to this).  So, OpenMap now has a workaround.  You can use
# the com.bbn.openmap.io.AppletDataNugget class to create a
# package-less, empty class to put at the root of your data jar file
# (JavaDocs contains instructions, and there is a usage statement
# printout if you run the class).  It might be good practice to name
# this class the same name as the jar file itself.  Put the name of
# the class (or classes) that is in the data jar file in this list,
# and the BinaryFile will be able to find it.  If you aren't running
# as an applet, or your data is not in a jar file by itself, you don't
# need to use this property.

#openmap.appletDataNuggets=

# ###################################################
# These properties define the general components to use in the
# application, OTHER than layers.  Notice the marker name list.  You
# can add and removed parts of the application here, simply by
# adjusting this marker name list and adding properties for that
# marker name.  Note the order in which menu objects are important,
# except helpMenu which is always adjusted to be the last menu item.
#
# If you want to remove components from the application, simply remove
# the marker name from the openmap.components list.  You don't have to
# delete the class definition property, too.  If you want to add a
# component to the list, add the marker name to the openmap.components
# list when you want it to be created and added relative to the other
# components, and then add a 'marker name'.class property for that
# component to this file.
# ###################################################

openmap.components= omdrawingtool toolBar omToolSet layersPanel omdtl overviewMapHandler layerHandler  mouseModePanel informationDelegator mouseDelegator navMouseMode selectMouseMode distanceMouseMode nullMouseMode fileMenu helpMenu controlMenu navigateMenu layersMenu helpUserMenuItem omlineloader projectionstack projectionstacktool omcircleloader omrectloader ompointloader ompolyloader goto addlayer

layerHandler.class=com.bbn.openmap.LayerHandler
toolBar.class=com.bbn.openmap.gui.ToolPanel
omToolSet.class=com.bbn.openmap.gui.OMToolSet
layersPanel.class=com.bbn.openmap.gui.LayersPanel
overviewMapHandler.class=com.bbn.openmap.gui.OverviewMapHandler
layersMenu.class=com.bbn.openmap.gui.LayersMenu
mouseModePanel.class=com.bbn.openmap.gui.MouseModePanel
informationDelegator.class=com.bbn.openmap.InformationDelegator
mouseDelegator.class=com.bbn.openmap.MouseDelegator
navMouseMode.class=com.bbn.openmap.event.NavMouseMode2
selectMouseMode.class=com.bbn.openmap.event.SelectMouseMode
distanceMouseMode.class=com.bbn.openmap.event.DistanceMouseMode
nullMouseMode.class=com.bbn.openmap.event.NullMouseMode
fileMenu.class=com.bbn.openmap.gui.FileMenu
helpMenu.class=com.bbn.openmap.gui.DefaultHelpMenu
controlMenu.class=com.bbn.openmap.gui.ControlMenu
navigateMenu.class=com.bbn.openmap.gui.NavigateMenu
helpUserMenuItem.class=com.bbn.openmap.gui.UserGuideMenuItems
omdrawingtool.class=com.bbn.openmap.tools.drawing.OMDrawingTool
omlineloader.class=com.bbn.openmap.tools.drawing.OMLineLoader
omcircleloader.class=com.bbn.openmap.tools.drawing.OMCircleLoader
omrectloader.class=com.bbn.openmap.tools.drawing.OMRectLoader
ompointloader.class=com.bbn.openmap.tools.drawing.OMPointLoader
ompolyloader.class=com.bbn.openmap.tools.drawing.OMPolyLoader
projectionstack.class=com.bbn.openmap.proj.ProjectionStack
projectionstacktool.class=com.bbn.openmap.gui.ProjectionStackTool
omdtl.class=com.bbn.openmap.tools.drawing.OMDrawingToolLauncher
addlayer.class=com.bbn.openmap.gui.LayerAddPanel

goto.class=com.bbn.openmap.gui.GoToMenu
goto.addDefaults=true



# ###################################################
# Properties defined for the overview map handler.
# ###################################################

# marker name list, layer defined later
overviewLayers=overviewLayer

# how zoomed out to keep the overview map versus the main map
overviewScaleFactor=10f

# when to stop zooming in
overviewMinScale=10000000f

# the layer to use to render on top, showing where the main map covers.
overviewStatusLayer=com.bbn.openmap.layer.OverviewMapAreaLayer



# ###################################################
# You can refer to other properties files and have their properties
# loaded as well.  This is good for defining a set of layers that work
# with a particular type of data, for instance, and then override some
# of those properties defined in those files to localize them for your
# setup.  This works with a marker name list.  By default, nothing defined.
# ###################################################

#openmap.include=include1 include2
#include1.URL=<http://whatever>
#include2.URL=<http://whatever>



# ###################################################
# Here is the list of layers to add to the map.  The properties for
# each marker name are defined later.  
#
# If you want to remove a layer from the application, remove its
# marker name from the openmap.layers property list.  You do not have
# to delete all of its properties as well.
#
# If you want to add a layer to the application, add it's marker name
# to the openmap.layers property list, and then add its properties to
# this file.  As a minimum, Layers all need a 'marker name'.class
# property, and a 'marker name'.prettyName property (for the GUI
# components).  Consult the JavaDocs for a layer to see what other
# properties can be set for that layer.
# ###################################################

# Layers listed here appear on the Map in the order of their names.
openmap.layers=date drawing quake daynight graticule ugsData vmapRoad vmapInwater vmapPop shapePolitical politicalCombo vmapCoastline jdted

# These layers are turned on when the map is first started.  Order
# does not matter here...
openmap.startUpLayers=graticule ugsData vmapCoastline jdted



# In OpenMap 4.4, the LayerAddPanel was added.  This panel allows
# certain layers/plugins to be added to the application dynamically.
# Only certain layers/plugin have been updated to be able to work with
# the Inspector to set their inital parameters. To add a layer to this
# list, create a unique marker name for a generic instance of the
# layer, and then supply the <layername>.class field and
# <layername>.prettyName (see below) for that object.  The class name
# will be the type of layer/plugin created by the LayerAddPanel, and
# this prettyName will be the generic description of the layer
# presented to the user.  The user will have an opportunity to name
# the specific layer that gets created.
openmap.addableLayers=earth shape grat rpf shispi eipi

grat.class=com.bbn.openmap.layer.GraticuleLayer
grat.prettyName=Graticule Layer

earth.class=com.bbn.openmap.layer.EarthquakeLayer
earth.prettyName=Earthquake Layer

shape.class=com.bbn.openmap.layer.shape.ShapeLayer
shape.prettyName=Shape Layer

rpf.class=com.bbn.openmap.layer.rpf.RpfLayer
rpf.prettyName=RPF Layer

shispi.class=com.bbn.openmap.plugin.shis.SHISPlugin
shispi.prettyName=Simple Http Image Server (SHIS) Plugin

eipi.class=com.bbn.openmap.plugin.earthImage.EarthImagePlugin
eipi.prettyName=Earth Image Plugin



#####################################################
# These are the properties for individual layers.  Consult the 
# javadocs (Java API pages) for the individual layers for options.
#####################################################

### Layer used by the overview handler
overviewLayer.class=com.bbn.openmap.layer.shape.ShapeLayer
overviewLayer.prettyName=Overview
overviewLayer.shapeFile=dcwpo-browse.shp
overviewLayer.spatialIndex=dcwpo-browse.ssx
overviewLayer.lineColor=ff000000
overviewLayer.fillColor=ffbdde83


### Date & Time layer
date.class=com.bbn.openmap.layer.DateLayer
date.prettyName=Date & Time
# display font as a Java font string
date.font=SansSerif-Bold
# like XWindows geometry: [+-]X[+-]Y, `+' indicates relative to
# left edge or top edges, `-' indicates relative to right or bottom
# edges, XX is x coordinate, YY is y coordinate
date.geometry=+20+30
# background rectangle color ARGB
date.color.bg=ff808080
# foreground text color ARGB
date.color.fg=ff000000
# date format (using java.text.SimpleDateFormat patterns)
date.date.format=EEE, d MMM yyyy HH:mm:ss z


### 
# DrawingToolLayer - no palette, just a generic layer to catch
# graphics from the OMDrawingToolLauncher, and to call the OMDrawingTool
# to edit graphics already part of the layer.
drawing.class=com.bbn.openmap.layer.DrawingToolLayer
drawing.prettyName=Drawing Tool Layer
drawing.addToBeanContext=true


### Earthquake layer
quake.class=com.bbn.openmap.layer.EarthquakeLayer
quake.prettyName=Recent Earthquakes


### Day/Night shading layer properties
daynight.class=com.bbn.openmap.layer.daynight.DayNightLayer
daynight.prettyName=Day/Night Shading
# draw terminator as poly (faster calculation than image, defaults to
# true).
daynight.doPolyTerminator=true
# number of vertices for polygon terminator line.  this is only valid
# if doPolyTerminator is true...
daynight.terminatorVerts=512
# termFade - the distance of the transition of fade, as a percentage of PI.
daynight.termFade=.1
# currentTime - true to display the shading at the computer's current time.
daynight.currentTime=true
# updateInterval - time in milliseconds between updates.  currentTime has to be
# true for this to be used.  1000*60*5 = 300000 = 5min updates
daynight.updateInterval=300000
# Shading Colors (32bit ARGB)
daynight.nighttimeColor=64000000
daynight.daytimeColor=00FFFFFF


### Graticule layer
graticule.class=com.bbn.openmap.layer.GraticuleLayer
graticule.prettyName=Graticule
# Show lat / lon spacing labels
graticule.showRuler=true
graticule.show1And5Lines=true
# Controls when the five degree lines and one degree lines kick in
#- when there is less than the threshold of ten degree lat or lon
#lines, five degree lines are drawn.  The same relationship is there
#for one to five degree lines.
graticule.threshold=2
# the color of 10 degree spaing lines (ARGB)
graticule.10DegreeColor=99000000
# the color of 5 degree spaing lines (ARGB)
graticule.5DegreeColor=99009900
# the color of 1 degree spaing lines (ARGB)
graticule.1DegreeColor=99003300
# the color of the equator (ARGB)
graticule.equatorColor=99FF0000
# the color of the international dateline (ARGB)
graticule.dateLineColor=99000000
# the color of the special lines (ARGB)
graticule.specialLineColor=99000000
# the color of the labels (ARGB)
graticule.textColor=99000000


### Political boundaries layer
shapePolitical.class=com.bbn.openmap.layer.shape.ShapeLayer
shapePolitical.prettyName=Political Solid
# Specify shapefile and spatial-index file as a filename or pathname.
# If the former, you must reference the directory where this file
# lives in your CLASSPATH
#shapePolitical.shapeFile=dcwpo-browse.shp
#shapePolitical.spatialIndex=dcwpo-browse.ssx
#shapePolitical.shapeFile=et.shp
#shapePolitical.spatialIndex=et.ssx
shapePolitical.shapeFile=vmap_area_thin.shp
shapePolitical.spatialIndex=vmap_area_thin.ssx

# Colors (32bit ARGB)
shapePolitical.lineColor=ff000000
shapePolitical.fillColor=77AA77


### ShapeFile layer, thinned converted vmap political boundaries,
# multiple shape files on one layer...
politicalCombo.class=com.bbn.openmap.layer.shape.MultiShapeLayer
politicalCombo.prettyName=Political Boundaries 2
politicalCombo.shapeFileList=pol_edges pol_fill

politicalCombo.pol_edges.shapeFile=vmap_edge_thin.shp
politicalCombo.pol_edges.prettyName=Borders
politicalCombo.pol_edges.buffered=false

politicalCombo.pol_fill.shapeFile=vmap_area_thin.shp
politicalCombo.pol_fill.prettyName=Areas
politicalCombo.pol_fill.lineColor=FFAAAA66
politicalCombo.pol_fill.fillColor=FFAAAA66
politicalCombo.pol_fill.buffered=false


### Java DTED properties
jdted.class=com.bbn.openmap.layer.dted.DTEDLayer
jdted.prettyName=DTED
# This property should reflect the paths to the DTED level 0 and 1 
# directories.  These levels can be combined.
jdted.paths=c:\\work\\resources\\openmap-4.4.2\\share\\data\\terrain\\dted
# Number between 0-255: 0 is transparent, 255 is opaque
jdted.opaque=255
# Number of colors to use on the maps - 16, 32, 216
jdted.number.colors=216
# Level of DTED data to use on startup (0, 1, 2)
jdted.level=0
# Type of display for the data on startup
# 0 = no shading at all
# 1 = greyscale slope shading
# 2 = band shading, in meters
# 3 = band shading, in feet
# 4 = subframe testing
# 5 = elevation, colored
jdted.view.type=5
# Contrast setting on startup, 1-5
jdted.contrast=3
# height (meters or feet) between color changes in band shading on startup
jdted.band.height=25
# Minimum scale to display images. Larger numbers mean smaller scale, 
# and are more zoomed out.
jdted.min.scale=40000000


# VMAP Coastline layer
vmapCoastline.class=com.bbn.openmap.layer.vpf.VPFLayer
vmapCoastline.prettyName=VMAP Political Boundaries
vmapCoastline.vpfPath=d:\vmaplv0

vmapCoastline.coverageType=bnd
vmapCoastline.featureTypes=edge area
vmapCoastline.edge=polbndl coastl
#vmapCoastline.area=polbnda
vmapCoastline.lineColor=000000
#vmapCoastline.lineWidth=3
#vmapCoastline.fillColor=77AA77
#vmapCoastline.fillColor=ffbdde83


# VMAP Road network data
vmapRoad.class=com.bbn.openmap.layer.vpf.VPFLayer
vmapRoad.prettyName=Roads
vmapRoad.vpfPath=d:\vmaplv0

vmapRoad.coverageType=trans
vmapRoad.featureTypes=edge
vmapRoad.edge=roadl
#vmapRoad.lineColor=FF0000
vmapRoad.lineColor=CCCCCC


# VMAP Inland Water data
vmapInwater.class=com.bbn.openmap.layer.vpf.VPFLayer
vmapInwater.prettyName=Inland Water
vmapInwater.vpfPath=d:\vmaplv0

vmapInwater.coverageType=hydro
vmapInwater.featureTypes=edge area
vmapInwater.edge=aquecanl watrcrsl
vmapInwater.area=inwatera
vmapInwater.lineColor=003399
vmapInwater.fillColor=003399


# VMAP Population Centers data
vmapPop.class=com.bbn.openmap.layer.vpf.VPFLayer
vmapPop.prettyName=Population Centers
vmapPop.vpfPath=d:\vmaplv0

vmapPop.coverageType=pop
vmapPop.featureTypes=area
vmapPop.area=builtupa mispopa
vmapPop.lineColor=FFFF99
vmapPop.fillColor=FFFF99


# UGS data layer
ugsData.class=org.cougaar.microedition.demo.ugs.map.UGSDataP2PLayer
ugsData.prettyName=UGS Sensor Data
ugsData.contextInfoFile=C:\\work\\code\\P2P-IRAD\\micro\\configs\\gui\\context.txt





######################  Nothing past here is used  ############################

###
# Demo layer - the layer's palette has a bunch of buttons to call
# the Drawing Tool.
#demo.class=com.bbn.openmap.layer.DemoLayer
#demo.prettyName=Demo


# ScaleFilterLayer switches between the layers at the transisition scales.
ScaledPolitical.class=com.bbn.openmap.layer.ScaleFilterLayer
ScaledPolitical.prettyName=Political Boundaries
# List 2 or more layers
ScaledPolitical.layers=ThinShapePolitical ShapePolitical
# List the transition scales to switch between layers
ScaledPolitical.transitionScales=5000000

# ScaleFilterLayer switches between the layers at the transisition scales.
ScaledFillPolitical.class=com.bbn.openmap.layer.ScaleFilterLayer
ScaledFillPolitical.prettyName=Political Areas
# List 2 or more layers
ScaledFillPolitical.layers=ThinShapeFillPolitical ShapeFillPolitical
# List the transition scales to switch between layers
ScaledFillPolitical.transitionScales=5000000

### ShapeFile layer, full resolution converted vmap political boundaries
ShapePolitical.class=com.bbn.openmap.layer.shape.ShapeLayer
ShapePolitical.prettyName=Political Edge
ShapePolitical.shapeFile=vmap_edge.shp
ShapePolitical.spatialIndex=vmap_edge.ssx

### ShapeFile layer, thinned converted vmap political boundaries
ThinShapePolitical.class=com.bbn.openmap.layer.shape.ShapeLayer
ThinShapePolitical.prettyName=Political Edge
ThinShapePolitical.shapeFile=vmap_edge_thin.shp
ThinShapePolitical.spatialIndex=vmap_edge_thin.ssx

### ShapeFile layer, full resolution converted vmap political areas
ShapeFillPolitical.class=com.bbn.openmap.layer.shape.ShapeLayer
ShapeFillPolitical.prettyName=Political Solid
ShapeFillPolitical.shapeFile=vmap_area.shp
ShapeFillPolitical.spatialIndex=vmap_area.ssx
ShapeFillPolitical.lineColor=BDDE83
ShapeFillPolitical.fillColor=BDDE83

### ShapeFile layer, thinned converted vmap political areas
ThinShapeFillPolitical.class=com.bbn.openmap.layer.shape.ShapeLayer
ThinShapeFillPolitical.prettyName=Political Solid
ThinShapeFillPolitical.shapeFile=vmap_area_thin.shp
ThinShapeFillPolitical.spatialIndex=vmap_area_thin.ssx
ThinShapeFillPolitical.lineColor=BDDE83
ThinShapeFillPolitical.fillColor=BDDE83


### Test layer
#test.prettyName=Test
#test.class=com.bbn.openmap.layer.test.TestLayer
#test.line.visible=true
#test.circ.visible=true
#test.rect.visible=true
#test.text.visible=true
#test.poly.visible=true
#test.poly.vertices=80 -180 80 -90 80 0 80 90 80 180 70 180 70 90 70 0 70 -90 70 -180


###CSV Location layer
#locationlayer.class=com.bbn.openmap.layer.location.LocationLayer
#locationlayer.prettyName=Emitter Display

#locationlayer.locationHandlers=csvlocationhandler

#csvlocationhandler.class=com.bbn.openmap.layer.location.csv.CSVLocationHandler
#csvlocationhandler.locationFile=
#csvlocationhandler.locationColor=FF0000
#csvlocationhandler.nameColor=008C54
#csvlocationhandler.showNames=True
#csvlocationhandler.showLocations=true
#csvlocationhandler.latIndex=0
#csvlocationhandler.lonIndex=1
#csvlocationhandler.nameIndex=2


# Basic political boundaries with DCW
dcwPolitical.class=com.bbn.openmap.leyer.vpf.VPFLayer
dcwPolitical.prettyName=DCW Political Boundaries
dcwPolitical.vpfPath=path to DCW data
dcwPolitical.coverageType=po
dcwPolitical.featureTypes=edge area


### Java RPF properties
jrpf.class=com.bbn.openmap.layer.rpf.RpfLayer
jrpf.prettyName=CADRG
# This property should reflect the paths to the RPF directories
jrpf.paths=c:/work/resources/openmap-4.4.2/share/data/RPF
# Number between 0-255: 0 is transparent, 255 is opaque
jrpf.opaque=255
# Number of colors to use on the maps - 16, 32, 216
jrpf.number.colors=216
# Display maps on startup
jrpf.showmaps=true
# Display attribute information on startup
jrpf.showinfo=false
# Scale images to fit the map scale
jrpf.scaleImages=true
jrpf.coverage=true

### Another Java RPF Layer - usually keep CADRG and CIB separate,
# although you don't have to.
jcib.class=com.bbn.openmap.layer.rpf.RpfLayer
jcib.prettyName=CIB
# This property should reflect the paths to the RPF directories
jcib.paths=c:/work/resources/openmap-4.4.2/share/data/CIB/RPF
# Number between 0-255: 0 is transparent, 255 is opaque
jcib.opaque=255
# Number of colors to use on the maps - 16, 32, 216
jcib.number.colors=216
# Display maps on startup
jcib.showmaps=true
# Display attribute information on startup
jcib.showinfo=false
# Scale images to fit the map scale
jcib.scaleImages=true


### Java DTED Coverage properties
dtedcov.class=com.bbn.openmap.layer.dted.DTEDCoverageLayer
dtedcov.prettyName=DTED Coverage
# This property should reflect the paths to the DTED level 0 and 1 
# directories.  These levels can be combined.
dtedcov.paths=c:/work/resources/openmap-4.4.2/share/data/dted
# DTED Level 2 data!
dtedcov.level2.paths=c:/work/resources/openmap-4.4.2/share/data/dted2 
# Number between 0-255: 0 is transparent, 255 is opaque
dtedcov.opaque=255

# *NOTE* This property needs to be changed to specify a DTED coverage file,
# or the location where you want one created if the layer doesn't find
# it here.  If you add or remove coverage from your dted collection,
# you should delete this file so that an accurate one will be created.
dtedcov.coverageFile=<path to coverage file>

# This is an optional property. You can substitute a URL for the
# coverage file instead.  This is checked first before the coverage
# file, and if a valid file is found at the URL, then the coverage
# file is ignored.  The layer does not try to create a file at this
# URL!
#dtedcov.coverageURL=http://dstl.bbn.com/openmap/data/dted/coverage.dat


# Terrain layer.
terrain.class=com.bbn.openmap.layer.terrain.TerrainLayer
terrain.prettyName=Terrain Tools
# This property should reflect the paths to the DTED directories
terrain.dted.paths=c:/work/resources/openmap-4.4.2/share/data/dted
# The default tool to use for the terrain layer.  Can be PROFILE or LOS.
terrain.default.mode=PROFILE

# Plugin layer with a samplePlugin marker name - comments are commented out!
#samplePlugin.class=com.bbn.openmap.plugin.PluginLayer
#samplePlugin.prettyName=Earth At Night
#samplePlugin.plugin=<path to Plugin class>
# Then, plugin properties as needed, with layer marker name.plugin
# prefix.  These depend on the Plugin, and you should consult the
# JavaDocs for that Plugin class for specifics.
#samplePlugin.plugin.property1=value
#samplePlugin.plugin.property2=value
